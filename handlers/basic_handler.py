from aiogram import Router
from aiogram.types import Message, ReplyKeyboardRemove
from aiogram.utils.callback_answer import CallbackAnswerMiddleware
from aiogram.fsm.context import FSMContext
from states import St
from aiogram import F
from db.db import DB
from film_tools.film_builder import build_film
import asyncio
from keyboard import back, main_kb, sub
from aiogram.methods import GetChatMember
from tools.check_sub import check_sub
from bot import bot


router = Router()
router.callback_query.middleware(CallbackAnswerMiddleware())
db = DB()

not_subbed ='üò∂‚Äçüå´Ô∏è –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º. \n \n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª\n<a href="https://t.me/fevertt">Movies Fever</a>, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞.'


@router.message(F.text == "‚úèÔ∏è –í–≤–µ—Å—Ç–∏ –∫–æ–¥")
async def code_enter(msg: Message, state: FSMContext):
    subbed = await check_sub(msg.from_user.id)
    if subbed:
        await msg.answer('üëÄ –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ —Ñ–∏–ª—å–º–∞.', reply_markup=back)
        await state.set_state(St.code)
    else:
        await msg.answer(not_subbed, parse_mode='HTML', reply_markup=sub)


@router.message(St.code)
async def get_film(msg: Message, state: FSMContext):
    subbed = await check_sub(msg.from_user.id)
    if subbed:
        code = msg.text
        await msg.answer(f'üîç –ü–æ–∏—Å–∫ —Ñ–∏–ª—å–º–∞ –ø–æ –∫–æ–¥—É {code}...')
        await asyncio.sleep(1)
        if code.isdigit() and  1000 < int(code) < 9999:
            code = int(code)
            film = db.get_film(code)
            if film:
                await asyncio.sleep(1)
                await msg.answer_photo(film[2], caption=(f'üóù –ö–æ–¥: {code}\n') + build_film(film[3], film[4], film[5],  film[6], film[7], film[8], film[9]), reply_markup=main_kb)
                await state.clear()
            else:
                await asyncio.sleep(1)
                await msg.answer(f'üòµ‚Äçüí´ –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ñ–∏–ª—å–º —Å –∫–æ–¥–æ–º "{code}".', reply_markup=back)
        else:
            await msg.answer('ü´• –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–¥–∞. –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –µ—â—ë —Ä–∞–∑.', reply_markup=back)
    else:
        await msg.answer(not_subbed, parse_mode='HTML', reply_markup=sub)

    


@router.message(F.text == "‚ùîÔ∏è –°–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º")
async def random_film(msg: Message, state: FSMContext):
    subbed = await check_sub(msg.from_user.id)
    if subbed:
        await msg.answer('üîç –ò–¥—ë—Ç –ø–æ–∏—Å–∫ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Ñ–∏–ª—å–º–∞...')
        await asyncio.sleep(3)
        await msg.answer('ü§© –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤–∞–º –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —ç—Ç–æ—Ç —Ñ–∏–ª—å–º!')
        await asyncio.sleep(1)
        randfilm = db.get_randfilm()
        await msg.answer_photo(randfilm[2], caption=(f'üóù –ö–æ–¥: {randfilm[1]}\n') + build_film(randfilm[3], randfilm[4], randfilm[5],  randfilm[6], randfilm[7], randfilm[8], randfilm[9]), reply_markup=main_kb)
        #–¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–º–µ—Ç–∫—É "–ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–æ"
    else:
        await msg.answer(not_subbed, parse_mode='HTML', reply_markup=sub)


@router.callback_query(F.data == "checksub")
async def check(msg: Message):
    subbed = await check_sub(msg.from_user.id)
    if subbed:
        await msg.answer('‚ù§Ô∏è', reply_markup=main_kb)
        await bot.send_message(msg.from_user.id, 'üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –¢–µ–ø–µ—Ä—å –≤–∞–º –¥–æ—Å—Ç—É–ø–Ω—ã –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏!')
    else:
        await bot.send_message(msg.from_user.id, 'üò≠ –í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –∫–∞–Ω–∞–ª–∞.')

